// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: sf/substreams/transform/v1/transform.proto

package pbtransform

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The UpdatePolicy determines what is possible to do with the store
// (the operations permitted no it, like set(), or sum(), etc..)  in
// order to ensure parallel operations are deterministic and
// possible.
//
// Say a store cumulates keys from block 0 to 1M, and a second store
// cumulates keys from block 1M to 2M. When we want to use this
// store as a dependency for a downstream module, we will merge the
// two stores according to this policy.
type KindStore_UpdatePolicy int32

const (
	KindStore_UNSET KindStore_UpdatePolicy = 0
	// Provides a store where you can `set()` keys, and the latest key wins
	KindStore_REPLACE KindStore_UpdatePolicy = 1
	// Provides a store where youc an `set_if_not_exists()` keys, and the first key wins
	KindStore_IGNORE KindStore_UpdatePolicy = 2
	// Provides a store where you can `sum_*()` keys, where two stores merge by summing its values.
	KindStore_SUM KindStore_UpdatePolicy = 3
	// Provides a store where you can `min_*()` keys, where two stores merge by leaving the minimum value.
	KindStore_MIN KindStore_UpdatePolicy = 4
	// Provides a store where you can `max_*()` keys, where two stores merge by leaving the maximum value.
	KindStore_MAX KindStore_UpdatePolicy = 5
)

// Enum value maps for KindStore_UpdatePolicy.
var (
	KindStore_UpdatePolicy_name = map[int32]string{
		0: "UNSET",
		1: "REPLACE",
		2: "IGNORE",
		3: "SUM",
		4: "MIN",
		5: "MAX",
	}
	KindStore_UpdatePolicy_value = map[string]int32{
		"UNSET":   0,
		"REPLACE": 1,
		"IGNORE":  2,
		"SUM":     3,
		"MIN":     4,
		"MAX":     5,
	}
)

func (x KindStore_UpdatePolicy) Enum() *KindStore_UpdatePolicy {
	p := new(KindStore_UpdatePolicy)
	*p = x
	return p
}

func (x KindStore_UpdatePolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KindStore_UpdatePolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_substreams_transform_v1_transform_proto_enumTypes[0].Descriptor()
}

func (KindStore_UpdatePolicy) Type() protoreflect.EnumType {
	return &file_sf_substreams_transform_v1_transform_proto_enumTypes[0]
}

func (x KindStore_UpdatePolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KindStore_UpdatePolicy.Descriptor instead.
func (KindStore_UpdatePolicy) EnumDescriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{4, 0}
}

type InputStore_Mode int32

const (
	InputStore_UNSET  InputStore_Mode = 0
	InputStore_GET    InputStore_Mode = 1
	InputStore_DELTAS InputStore_Mode = 2
)

// Enum value maps for InputStore_Mode.
var (
	InputStore_Mode_name = map[int32]string{
		0: "UNSET",
		1: "GET",
		2: "DELTAS",
	}
	InputStore_Mode_value = map[string]int32{
		"UNSET":  0,
		"GET":    1,
		"DELTAS": 2,
	}
)

func (x InputStore_Mode) Enum() *InputStore_Mode {
	p := new(InputStore_Mode)
	*p = x
	return p
}

func (x InputStore_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InputStore_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_substreams_transform_v1_transform_proto_enumTypes[1].Descriptor()
}

func (InputStore_Mode) Type() protoreflect.EnumType {
	return &file_sf_substreams_transform_v1_transform_proto_enumTypes[1]
}

func (x InputStore_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InputStore_Mode.Descriptor instead.
func (InputStore_Mode) EnumDescriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{8, 0}
}

type ModuleCode_CodeType int32

const (
	ModuleCode_UNSET        ModuleCode_CodeType = 0
	ModuleCode_NATIVE       ModuleCode_CodeType = 1
	ModuleCode_WASM_RUST_V1 ModuleCode_CodeType = 2
)

// Enum value maps for ModuleCode_CodeType.
var (
	ModuleCode_CodeType_name = map[int32]string{
		0: "UNSET",
		1: "NATIVE",
		2: "WASM_RUST_V1",
	}
	ModuleCode_CodeType_value = map[string]int32{
		"UNSET":        0,
		"NATIVE":       1,
		"WASM_RUST_V1": 2,
	}
)

func (x ModuleCode_CodeType) Enum() *ModuleCode_CodeType {
	p := new(ModuleCode_CodeType)
	*p = x
	return p
}

func (x ModuleCode_CodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModuleCode_CodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_sf_substreams_transform_v1_transform_proto_enumTypes[2].Descriptor()
}

func (ModuleCode_CodeType) Type() protoreflect.EnumType {
	return &file_sf_substreams_transform_v1_transform_proto_enumTypes[2]
}

func (x ModuleCode_CodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModuleCode_CodeType.Descriptor instead.
func (ModuleCode_CodeType) EnumDescriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{9, 0}
}

type Transform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputModule string    `protobuf:"bytes,1,opt,name=output_module,json=outputModule,proto3" json:"output_module,omitempty"` //todo: stream should always be a module of the map, right?
	Manifest     *Manifest `protobuf:"bytes,2,opt,name=manifest,proto3" json:"manifest,omitempty"`
}

func (x *Transform) Reset() {
	*x = Transform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transform) ProtoMessage() {}

func (x *Transform) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transform.ProtoReflect.Descriptor instead.
func (*Transform) Descriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{0}
}

func (x *Transform) GetOutputModule() string {
	if x != nil {
		return x.OutputModule
	}
	return ""
}

func (x *Transform) GetManifest() *Manifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

type Manifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecVersion string        `protobuf:"bytes,1,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	Description string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Modules     []*Module     `protobuf:"bytes,3,rep,name=modules,proto3" json:"modules,omitempty"`
	ModulesCode []*ModuleCode `protobuf:"bytes,4,rep,name=modules_code,json=modulesCode,proto3" json:"modules_code,omitempty"`
}

func (x *Manifest) Reset() {
	*x = Manifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Manifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manifest) ProtoMessage() {}

func (x *Manifest) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manifest.ProtoReflect.Descriptor instead.
func (*Manifest) Descriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{1}
}

func (x *Manifest) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

func (x *Manifest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Manifest) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *Manifest) GetModulesCode() []*ModuleCode {
	if x != nil {
		return x.ModulesCode
	}
	return nil
}

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Kind:
	//	*Module_KindMap
	//	*Module_KindStore
	Kind isModule_Kind `protobuf_oneof:"kind"`
	// Refers to the `modules_code` list in the Manifest in which this module is referenced
	CodeIndex      uint32   `protobuf:"varint,3,opt,name=code_index,json=codeIndex,proto3" json:"code_index,omitempty"`
	CodeEntrypoint string   `protobuf:"bytes,4,opt,name=code_entrypoint,json=codeEntrypoint,proto3" json:"code_entrypoint,omitempty"`
	Inputs         []*Input `protobuf:"bytes,5,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// Types that are assignable to Output:
	//	*Module_OutputSource
	//	*Module_OutputMap
	//	*Module_OutputStore
	Output isModule_Output `protobuf_oneof:"output"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{2}
}

func (x *Module) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Module) GetKind() isModule_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Module) GetKindMap() *KindMap {
	if x, ok := x.GetKind().(*Module_KindMap); ok {
		return x.KindMap
	}
	return nil
}

func (x *Module) GetKindStore() *KindStore {
	if x, ok := x.GetKind().(*Module_KindStore); ok {
		return x.KindStore
	}
	return nil
}

func (x *Module) GetCodeIndex() uint32 {
	if x != nil {
		return x.CodeIndex
	}
	return 0
}

func (x *Module) GetCodeEntrypoint() string {
	if x != nil {
		return x.CodeEntrypoint
	}
	return ""
}

func (x *Module) GetInputs() []*Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (m *Module) GetOutput() isModule_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (x *Module) GetOutputSource() *InputSource {
	if x, ok := x.GetOutput().(*Module_OutputSource); ok {
		return x.OutputSource
	}
	return nil
}

func (x *Module) GetOutputMap() *InputMap {
	if x, ok := x.GetOutput().(*Module_OutputMap); ok {
		return x.OutputMap
	}
	return nil
}

func (x *Module) GetOutputStore() *InputStore {
	if x, ok := x.GetOutput().(*Module_OutputStore); ok {
		return x.OutputStore
	}
	return nil
}

type isModule_Kind interface {
	isModule_Kind()
}

type Module_KindMap struct {
	KindMap *KindMap `protobuf:"bytes,12,opt,name=kind_map,json=kindMap,proto3,oneof"`
}

type Module_KindStore struct {
	KindStore *KindStore `protobuf:"bytes,13,opt,name=kind_store,json=kindStore,proto3,oneof"`
}

func (*Module_KindMap) isModule_Kind() {}

func (*Module_KindStore) isModule_Kind() {}

type isModule_Output interface {
	isModule_Output()
}

type Module_OutputSource struct {
	OutputSource *InputSource `protobuf:"bytes,21,opt,name=output_source,json=outputSource,proto3,oneof"`
}

type Module_OutputMap struct {
	OutputMap *InputMap `protobuf:"bytes,22,opt,name=output_map,json=outputMap,proto3,oneof"`
}

type Module_OutputStore struct {
	OutputStore *InputStore `protobuf:"bytes,23,opt,name=output_store,json=outputStore,proto3,oneof"`
}

func (*Module_OutputSource) isModule_Output() {}

func (*Module_OutputMap) isModule_Output() {}

func (*Module_OutputStore) isModule_Output() {}

type KindMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputType string `protobuf:"bytes,1,opt,name=output_type,json=outputType,proto3" json:"output_type,omitempty"`
}

func (x *KindMap) Reset() {
	*x = KindMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KindMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KindMap) ProtoMessage() {}

func (x *KindMap) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KindMap.ProtoReflect.Descriptor instead.
func (*KindMap) Descriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{3}
}

func (x *KindMap) GetOutputType() string {
	if x != nil {
		return x.OutputType
	}
	return ""
}

type KindStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatePolicy KindStore_UpdatePolicy `protobuf:"varint,1,opt,name=update_policy,json=updatePolicy,proto3,enum=sf.substreams.transform.v1.KindStore_UpdatePolicy" json:"update_policy,omitempty"`
	ValueType    string                 `protobuf:"bytes,2,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
}

func (x *KindStore) Reset() {
	*x = KindStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KindStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KindStore) ProtoMessage() {}

func (x *KindStore) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KindStore.ProtoReflect.Descriptor instead.
func (*KindStore) Descriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{4}
}

func (x *KindStore) GetUpdatePolicy() KindStore_UpdatePolicy {
	if x != nil {
		return x.UpdatePolicy
	}
	return KindStore_UNSET
}

func (x *KindStore) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Input:
	//	*Input_Source
	//	*Input_Map
	//	*Input_Store
	Input isInput_Input `protobuf_oneof:"input"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{5}
}

func (m *Input) GetInput() isInput_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *Input) GetSource() *InputSource {
	if x, ok := x.GetInput().(*Input_Source); ok {
		return x.Source
	}
	return nil
}

func (x *Input) GetMap() *InputMap {
	if x, ok := x.GetInput().(*Input_Map); ok {
		return x.Map
	}
	return nil
}

func (x *Input) GetStore() *InputStore {
	if x, ok := x.GetInput().(*Input_Store); ok {
		return x.Store
	}
	return nil
}

type isInput_Input interface {
	isInput_Input()
}

type Input_Source struct {
	Source *InputSource `protobuf:"bytes,1,opt,name=source,proto3,oneof"`
}

type Input_Map struct {
	Map *InputMap `protobuf:"bytes,2,opt,name=map,proto3,oneof"`
}

type Input_Store struct {
	Store *InputStore `protobuf:"bytes,3,opt,name=store,proto3,oneof"`
}

func (*Input_Source) isInput_Input() {}

func (*Input_Map) isInput_Input() {}

func (*Input_Store) isInput_Input() {}

type InputSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // ex: "sf.ethereum.type.v1.Block"
}

func (x *InputSource) Reset() {
	*x = InputSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputSource) ProtoMessage() {}

func (x *InputSource) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputSource.ProtoReflect.Descriptor instead.
func (*InputSource) Descriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{6}
}

func (x *InputSource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type InputMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName string `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"` // ex: "block_to_pairs"
}

func (x *InputMap) Reset() {
	*x = InputMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputMap) ProtoMessage() {}

func (x *InputMap) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputMap.ProtoReflect.Descriptor instead.
func (*InputMap) Descriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{7}
}

func (x *InputMap) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

type InputStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName string          `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	Mode       InputStore_Mode `protobuf:"varint,2,opt,name=mode,proto3,enum=sf.substreams.transform.v1.InputStore_Mode" json:"mode,omitempty"`
}

func (x *InputStore) Reset() {
	*x = InputStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputStore) ProtoMessage() {}

func (x *InputStore) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputStore.ProtoReflect.Descriptor instead.
func (*InputStore) Descriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{8}
}

func (x *InputStore) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *InputStore) GetMode() InputStore_Mode {
	if x != nil {
		return x.Mode
	}
	return InputStore_UNSET
}

type ModuleCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeType ModuleCode_CodeType `protobuf:"varint,1,opt,name=code_type,json=codeType,proto3,enum=sf.substreams.transform.v1.ModuleCode_CodeType" json:"code_type,omitempty"`
	Bytecode []byte              `protobuf:"bytes,2,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
}

func (x *ModuleCode) Reset() {
	*x = ModuleCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModuleCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModuleCode) ProtoMessage() {}

func (x *ModuleCode) ProtoReflect() protoreflect.Message {
	mi := &file_sf_substreams_transform_v1_transform_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModuleCode.ProtoReflect.Descriptor instead.
func (*ModuleCode) Descriptor() ([]byte, []int) {
	return file_sf_substreams_transform_v1_transform_proto_rawDescGZIP(), []int{9}
}

func (x *ModuleCode) GetCodeType() ModuleCode_CodeType {
	if x != nil {
		return x.CodeType
	}
	return ModuleCode_UNSET
}

func (x *ModuleCode) GetBytecode() []byte {
	if x != nil {
		return x.Bytecode
	}
	return nil
}

var File_sf_substreams_transform_v1_transform_proto protoreflect.FileDescriptor

var file_sf_substreams_transform_v1_transform_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x73, 0x66, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x73, 0x66,
	0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x22, 0x72, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73,
	0x66, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x22, 0xd8, 0x01, 0x0a,
	0x08, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x70, 0x65, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c,
	0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0c,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9f, 0x04, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6b, 0x69, 0x6e, 0x64, 0x5f, 0x6d,
	0x61, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52,
	0x07, 0x6b, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x46, 0x0a, 0x0a, 0x6b, 0x69, 0x6e, 0x64,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73,
	0x66, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6b, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x66, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x48, 0x01, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x61, 0x70, 0x48, 0x01, 0x52,
	0x09, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x4b, 0x0a, 0x0c, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x01, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x42,
	0x08, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x2a, 0x0a, 0x07, 0x4b, 0x69, 0x6e,
	0x64, 0x4d, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x09, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x57, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x73, 0x66, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0c,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4d, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x55,
	0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43,
	0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x10, 0x02, 0x12,
	0x07, 0x0a, 0x03, 0x53, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x49, 0x4e, 0x10,
	0x04, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x58, 0x10, 0x05, 0x22, 0xcd, 0x01, 0x0a, 0x05, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61,
	0x70, 0x12, 0x3e, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x21, 0x0a, 0x0b, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2b, 0x0a,
	0x08, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x0a, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x26, 0x0a, 0x04, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x54, 0x41,
	0x53, 0x10, 0x02, 0x22, 0xab, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x73, 0x66, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x33, 0x0a, 0x08,
	0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45,
	0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x41, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12,
	0x10, 0x0a, 0x0c, 0x57, 0x41, 0x53, 0x4d, 0x5f, 0x52, 0x55, 0x53, 0x54, 0x5f, 0x56, 0x31, 0x10,
	0x02, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x66, 0x61, 0x73, 0x74, 0x2f, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x66, 0x2f, 0x73,
	0x75, 0x62, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sf_substreams_transform_v1_transform_proto_rawDescOnce sync.Once
	file_sf_substreams_transform_v1_transform_proto_rawDescData = file_sf_substreams_transform_v1_transform_proto_rawDesc
)

func file_sf_substreams_transform_v1_transform_proto_rawDescGZIP() []byte {
	file_sf_substreams_transform_v1_transform_proto_rawDescOnce.Do(func() {
		file_sf_substreams_transform_v1_transform_proto_rawDescData = protoimpl.X.CompressGZIP(file_sf_substreams_transform_v1_transform_proto_rawDescData)
	})
	return file_sf_substreams_transform_v1_transform_proto_rawDescData
}

var file_sf_substreams_transform_v1_transform_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sf_substreams_transform_v1_transform_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_sf_substreams_transform_v1_transform_proto_goTypes = []interface{}{
	(KindStore_UpdatePolicy)(0), // 0: sf.substreams.transform.v1.KindStore.UpdatePolicy
	(InputStore_Mode)(0),        // 1: sf.substreams.transform.v1.InputStore.Mode
	(ModuleCode_CodeType)(0),    // 2: sf.substreams.transform.v1.ModuleCode.CodeType
	(*Transform)(nil),           // 3: sf.substreams.transform.v1.Transform
	(*Manifest)(nil),            // 4: sf.substreams.transform.v1.Manifest
	(*Module)(nil),              // 5: sf.substreams.transform.v1.Module
	(*KindMap)(nil),             // 6: sf.substreams.transform.v1.KindMap
	(*KindStore)(nil),           // 7: sf.substreams.transform.v1.KindStore
	(*Input)(nil),               // 8: sf.substreams.transform.v1.Input
	(*InputSource)(nil),         // 9: sf.substreams.transform.v1.InputSource
	(*InputMap)(nil),            // 10: sf.substreams.transform.v1.InputMap
	(*InputStore)(nil),          // 11: sf.substreams.transform.v1.InputStore
	(*ModuleCode)(nil),          // 12: sf.substreams.transform.v1.ModuleCode
}
var file_sf_substreams_transform_v1_transform_proto_depIdxs = []int32{
	4,  // 0: sf.substreams.transform.v1.Transform.manifest:type_name -> sf.substreams.transform.v1.Manifest
	5,  // 1: sf.substreams.transform.v1.Manifest.modules:type_name -> sf.substreams.transform.v1.Module
	12, // 2: sf.substreams.transform.v1.Manifest.modules_code:type_name -> sf.substreams.transform.v1.ModuleCode
	6,  // 3: sf.substreams.transform.v1.Module.kind_map:type_name -> sf.substreams.transform.v1.KindMap
	7,  // 4: sf.substreams.transform.v1.Module.kind_store:type_name -> sf.substreams.transform.v1.KindStore
	8,  // 5: sf.substreams.transform.v1.Module.inputs:type_name -> sf.substreams.transform.v1.Input
	9,  // 6: sf.substreams.transform.v1.Module.output_source:type_name -> sf.substreams.transform.v1.InputSource
	10, // 7: sf.substreams.transform.v1.Module.output_map:type_name -> sf.substreams.transform.v1.InputMap
	11, // 8: sf.substreams.transform.v1.Module.output_store:type_name -> sf.substreams.transform.v1.InputStore
	0,  // 9: sf.substreams.transform.v1.KindStore.update_policy:type_name -> sf.substreams.transform.v1.KindStore.UpdatePolicy
	9,  // 10: sf.substreams.transform.v1.Input.source:type_name -> sf.substreams.transform.v1.InputSource
	10, // 11: sf.substreams.transform.v1.Input.map:type_name -> sf.substreams.transform.v1.InputMap
	11, // 12: sf.substreams.transform.v1.Input.store:type_name -> sf.substreams.transform.v1.InputStore
	1,  // 13: sf.substreams.transform.v1.InputStore.mode:type_name -> sf.substreams.transform.v1.InputStore.Mode
	2,  // 14: sf.substreams.transform.v1.ModuleCode.code_type:type_name -> sf.substreams.transform.v1.ModuleCode.CodeType
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_sf_substreams_transform_v1_transform_proto_init() }
func file_sf_substreams_transform_v1_transform_proto_init() {
	if File_sf_substreams_transform_v1_transform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sf_substreams_transform_v1_transform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_substreams_transform_v1_transform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Manifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_substreams_transform_v1_transform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_substreams_transform_v1_transform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KindMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_substreams_transform_v1_transform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KindStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_substreams_transform_v1_transform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_substreams_transform_v1_transform_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_substreams_transform_v1_transform_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_substreams_transform_v1_transform_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sf_substreams_transform_v1_transform_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModuleCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sf_substreams_transform_v1_transform_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Module_KindMap)(nil),
		(*Module_KindStore)(nil),
		(*Module_OutputSource)(nil),
		(*Module_OutputMap)(nil),
		(*Module_OutputStore)(nil),
	}
	file_sf_substreams_transform_v1_transform_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Input_Source)(nil),
		(*Input_Map)(nil),
		(*Input_Store)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sf_substreams_transform_v1_transform_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sf_substreams_transform_v1_transform_proto_goTypes,
		DependencyIndexes: file_sf_substreams_transform_v1_transform_proto_depIdxs,
		EnumInfos:         file_sf_substreams_transform_v1_transform_proto_enumTypes,
		MessageInfos:      file_sf_substreams_transform_v1_transform_proto_msgTypes,
	}.Build()
	File_sf_substreams_transform_v1_transform_proto = out.File
	file_sf_substreams_transform_v1_transform_proto_rawDesc = nil
	file_sf_substreams_transform_v1_transform_proto_goTypes = nil
	file_sf_substreams_transform_v1_transform_proto_depIdxs = nil
}
